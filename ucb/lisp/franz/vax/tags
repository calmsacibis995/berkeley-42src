ATOLX	../alloc.c	/^# define ATOLX(p)	((((int)p)-OFFSET)>>7)$/
ATOX	../h/global.h	/^#define ATOX(a1)	((((int)(a1)) - OFFSET) >> 9)$/
CNTTYP	../lamr.c	/^CNTTYP() { return; \/* HI! COUNT ONE TYPE CALL! *\/ /
EVALATOM	../h/global.h	/^#define EVALATOM(x)	vtemp = x->a.clb;\\$/
FIDDLE	../sysat.c	/^#define FIDDLE(z,b,c,y) z->a.clb=newdot(); (z->a.c/
HUNKP	../h/global.h	/^#define	HUNKP(a1)	((TYPE(a1) >= 11) & (TYPE(a1) <=/
HUNKSIZE	../h/global.h	/^#define	HUNKSIZE(a1)	((TYPE(a1)+5) & 15)$/
HackHex	../divbig.c	/^HackHex() \/* this is a one minute function so drb /
ISNIL	../h/global.h	/^#define ISNIL(a)	(nil==a)$/
Iaddstat	../fex4.c	/^Iaddstat(name,readcode,setcode,valu)$/
Iarray	../eval2.c	/^Iarray(fun,args,evalp)$/
Ibalmod	../lam8.c	/^Ibalmod(invmodp)$/
Ibiglsh	../divbig.c	/^Ibiglsh(bignum,count,mode)$/
Ibindvars	../lam7.c	/^Ibindvars()$/
Iconcat	../lam2.c	/^Iconcat(unintern)$/
Iequal	../lam1.c	/^Iequal(first,second) $/
Ierrorh	../error.c	/^Ierrorh(type,message,valret,contuab,uniqid)$/
Ifcall	../eval2.c	/^Ifcall(a)$/
Ifclosure	../eval2.c	/^Ifclosure(clos,funcallp)$/
Iflatsi	../lam2.c	/^Iflatsi(current)$/
Ifloat	../lam5.c	/^Ifloat(handy)$/
Iget	../lam2.c	/^Iget(atm,ind)$/
Igetplist	../lam2.c	/^Igetplist(pptr,ind)$/
Igtpgsz	../fex3.c	/^Igtpgsz()$/
Ihau	../divbig.c	/^Ihau(fix)$/
Iimplode	../lam7.c	/^Iimplode(unintern)$/
Ilibdir	../ffasl.c	/^Ilibdir()$/
Imath	../lam8.c	/^lispval Imath(func)$/
Imkrtab	../lam6.c	/^Imkrtab(current)$/
Imuldiv	vax.c	/^Imuldiv() {$/
Inewvector	../lam8.c	/^Inewvector(class)$/
Inlthrow	../frame.c	/^Inlthrow(class, arg1, arg2)$/
Inonlocalgo	../frame.c	/^Inonlocalgo(class, arg1, arg2)$/
Ipntlen	../lam1.c	/^Ipntlen()$/
Ipurcopy	../lam8.c	/^Ipurcopy(handy)$/
Ipurep	../alloc.c	/^lispval $/
Iputprop	../lam2.c	/^Iputprop(atm,prop,ind)$/
Iratom	../io.c	/^Iratom()$/
Iretfromfr	../frame.c	/^Iretfromfr(fram)$/
Isstatus	../fex4.c	/^Isstatus(curnam,curval)$/
Istsrch	../fex4.c	/^lispval Istsrch(nam)$/
Iunbindvars	../lam7.c	/^Iunbindvars()$/
LDivide	../lam5.c	/^LDivide() {$/
LEmuldiv	../lam5.c	/^lispval LEmuldiv(){$/
LIfranzcall	../lam9.c	/^LIfranzcall()$/
LIfss	../eval2.c	/^LIfss()$/
LImemory	../alloc.c	/^LImemory()$/
LIshowstack	vax.c	/^LIshowstack()$/
LIvref	../lam8.c	/^LIvref()$/
LIvset	../lam8.c	/^LIvset()$/
LIvsize	../lam8.c	/^LIvsize()$/
LMakhunk	../lam8.c	/^LMakhunk()$/
Labsval	../lam3.c	/^Labsval()$/
Lacos	../lam8.c	/^lispval Lacos()$/
Ladd	../lam4.c	/^Ladd()$/
Ladd1	../lam3.c	/^Ladd1()$/
Lalfalp	../lam3.c	/^Lalfalp()$/
Lalloc	../lamr.c	/^Lalloc()$/
Larg	../lam6.c	/^Larg()$/
Largv	../lam5.c	/^Largv()$/
Larrayp	../lam1.c	/^Larrayp()$/
Larrayref	../lamr.c	/^Larrayref()$/
Lascii	../lam5.c	/^Lascii() $/
Lasin	../lam8.c	/^lispval Lasin()$/
Lassq	../lam6.c	/^Lassq()$/
Latan	../lam8.c	/^lispval Latan()$/
Latom	../lam1.c	/^Latom()$/
Lbaktrace	vax.c	/^Lbaktrace()$/
Lbcdad	../lam7.c	/^Lbcdad()$/
Lbcdp	../lam1.c	/^Lbcdp()$/
Lbiglsh	../divbig.c	/^Lbiglsh()$/
Lbigtol	../lam1.c	/^Lbigtol(){$/
Lboole	../lam5.c	/^Lboole(){$/
Lboundp	../lam6.c	/^Lboundp()$/
Lbreak	../lam5.c	/^lispval Lbreak() {$/
Lc02r	../lam1.c	/^Lc02r()$/
Lc03r	../lam1.c	/^Lc03r()$/
Lc04r	../lam1.c	/^Lc04r()$/
Lc12r	../lam1.c	/^Lc12r()$/
Lc13r	../lam1.c	/^Lc13r()$/
Lc14r	../lam1.c	/^Lc14r()$/
Lcaar	../lam1.c	/^Lcaar()$/
Lcadr	../lam1.c	/^Lcadr()$/
Lcar	../lam1.c	/^Lcar()$/
Lcdr	../lam1.c	/^Lcdr()$/
Lcfasl	../ffasl.c	/^Lcfasl(){$/
Lchdir	../lam5.c	/^lispval Lchdir(){$/
Lclose	../lam1.c	/^Lclose()$/
Lconcat	../lam2.c	/^Lconcat(){$/
Lcons	../lam1.c	/^Lcons()$/
Lcopyint	../lam6.c	/^Lcopyint()$/
Lcos	../lam8.c	/^lispval Lcos()$/
Lcprintf	../lam8.c	/^Lcprintf()$/
Lcpy1	../lam6.c	/^Lcpy1()$/
Lctcherr	../lam8.c	/^Lctcherr()$/
Lcxr	../lam8.c	/^Lcxr()$/
Ldbtofl	../lam4.c	/^Ldbtofl()$/
Lderef	../lamr.c	/^Lderef()$/
Ldiff	../lam3.c	/^Ldiff()$/
Ldrain	../lam1.c	/^Ldrain()$/
Ldtpr	../lam1.c	/^Ldtpr()$/
Leq	../lam1.c	/^Leq()$/
Lequal	../lam1.c	/^Lequal()$/
Lerr	../lam6.c	/^lispval Lerr()$/
Leval	../lam1.c	/^Leval()$/
Leval1	../trace.c	/^Leval1(){$/
Levalf	../evalf.c	/^Levalf ()$/
Levalhook	../trace.c	/^Levalhook()$/
Lexece	../lam7.c	/^Lexece()$/
Lexit	../lam7.c	/^Lexit()$/
Lexp	../lam8.c	/^lispval Lexp()$/
Lexplda	../lam5.c	/^Lexplda()$/
Lexpldc	../lam5.c	/^Lexpldc()$/
Lexpldn	../lam5.c	/^Lexpldn()$/
Lexpldx	../lam5.c	/^Lexpldx(kind,slashify)$/
Lfact	../lam5.c	/^Lfact()$/
Lfadd1	../lam4.c	/^lispval Lfadd1()$/
Lfake	../lamr.c	/^Lfake()$/
Lfd	../lam4.c	/^lispval Lfd()$/
Lfdopen	../lam7.c	/^Lfdopen()$/
Lfexpt	../lam4.c	/^lispval Lfexpt()$/
Lfileopen	../lam8.c	/^Lfileopen()$/
Lfix	../lam5.c	/^ lispval Lfix() $/
Lflatsi	../lam2.c	/^Lflatsi()$/
Lflessp	../lam4.c	/^lispval Lflessp()$/
Lfloat	../lam5.c	/^Lfloat()$/
Lfltodb	../lam4.c	/^Lfltodb()$/
Lfm	../lam4.c	/^lispval Lfm()$/
Lforget	../lamr.c	/^Lforget()$/
Lfork	../lam7.c	/^Lfork() {$/
Lfp	../lam4.c	/^lispval Lfp()$/
Lframedump	../frame.c	/^Lframedump()$/
Lfretn	../evalf.c	/^Lfretn ()$/
Lfrexp	../lam5.c	/^Lfrexp()$/
Lfseek	../lam8.c	/^Lfseek()$/
Lfsub1	../lam4.c	/^lispval Lfsub1()$/
Lft	../lam4.c	/^lispval Lft()$/
Lfunhook	../trace.c	/^Lfunhook()$/
Lgcstat	../lamgc.c	/^Lgcstat()$/
Lgensym	../lam7.c	/^Lgensym()$/
Lget	../lam2.c	/^Lget()$/
Lgeta	../lamr.c	/^Lgeta()$/
Lgetaddress	../fex3.c	/^Lgetaddress(){$/
Lgetaux	../lamr.c	/^Lgetaux()$/
Lgetd	../lam2.c	/^Lgetd()$/
Lgetdata	../lamr.c	/^Lgetdata()$/
Lgetdel	../lamr.c	/^Lgetdel()$/
Lgetdisc	../lamr.c	/^Lgetdisc()$/
Lgetentry	../lamr.c	/^Lgetentry()$/
Lgetenv	../lam6.c	/^Lgetenv()$/
Lgetl	../lamr.c	/^Lgetl()$/
Lgetlang	../lamr.c	/^Lgetlang()$/
Lgetloc	../lamr.c	/^Lgetloc()$/
Lgetparams	../lamr.c	/^Lgetparams()$/
Lgetsyntax	../lam3.c	/^Lgetsyntax()$/
Lgreaterp	../lam3.c	/^Lgreaterp()$/
Lhaipar	../divbig.c	/^Lhaipar()$/
Lhashst	../lam8.c	/^lispval Lhashst()$/
Lhau	../divbig.c	/^Lhau()$/
Lhtol	../lam8.c	/^Lhtol()$/
Lhunkp	../lam1.c	/^Lhunkp()$/
Lhunksize	../lam8.c	/^Lhunksize()$/
Limplode	../lam7.c	/^Limplode()$/
Linfile	../lam1.c	/^Linfile()$/
Lintern	../lam7.c	/^Lintern()$/
Lkilcopy	../lam6.c	/^Lkilcopy()$/
Llctrace	../lamr.c	/^Llctrace()$/
Llessp	../lam3.c	/^Llessp()$/
Llist	../lam1.c	/^Llist()$/
Lload	../lam2.c	/^Lload()$/
Llog	../lam8.c	/^lispval Llog()$/
Llsh	../lam8.c	/^Llsh()$/
Lmakertbl	../lam6.c	/^Lmakertbl()$/
Lmaknam	../lam7.c	/^Lmaknam()$/
Lmaknum	../lamr.c	/^Lmaknum()$/
Lmakunb	../lam8.c	/^Lmakunb()$/
Lmap	../lam2.c	/^Lmap()$/
Lmapc	../lam2.c	/^Lmapc()$/
Lmapcan	../lam2.c	/^Lmapcan()$/
Lmapcar	../lam2.c	/^Lmapcar()$/
Lmapcon	../lam2.c	/^Lmapcon()$/
Lmapcrx	../lam2.c	/^Lmapcrx(maptyp,join)$/
Lmapcx	../lam2.c	/^Lmapcx(maptyp)$/
Lmaplist	../lam2.c	/^Lmaplist()$/
Lmarray	../lamr.c	/^Lmarray()$/
Lmfunction	../lamr.c	/^Lmfunction()$/
Lminus	../lam3.c	/^Lminus()$/
Lmod	../lam3.c	/^Lmod()$/
Lmonitor	../lamp.c	/^Lmonitor()$/
Lncons	../lam3.c	/^Lncons()$/
Lnegp	../lam3.c	/^Lnegp()$/
Lnthelem	../lam1.c	/^Lnthelem()$/
Lnull	../lam1.c	/^Lnull()$/
Lnumberp	../lam1.c	/^Lnumberp()$/
Lnvec	../lam8.c	/^Lnvec()$/
Lnvecb	../lam8.c	/^Lnvecb()$/
Lnvecl	../lam8.c	/^Lnvecl()$/
Lnvecw	../lam8.c	/^Lnvecw()$/
Lnwritn	../lam1.c	/^Lnwritn()$/
Loblist	../lam3.c	/^Loblist()$/
Lod	../lamr.c	/^Lod()$/
Lonep	../lam3.c	/^Lonep()$/
Lopval	../lamr.c	/^lispval $/
Loutfile	../lam1.c	/^Loutfile()$/
Lpatom	../lam1.c	/^Lpatom()$/
Lpipe	../lam7.c	/^Lpipe()$/
Lplist	../lam6.c	/^Lplist()$/
Lpname	../lamr.c	/^Lpname()$/
Lpntlen	../lam1.c	/^Lpntlen()$/
Lpolyev	vax.c	/^Lpolyev()$/
Lportp	../lam1.c	/^Lportp()$/
Lprint	../lam1.c	/^Lprint()$/
Lprname	../lam7.c	/^Lprname()$/
Lprobef	../lam8.c	/^Lprobef()$/
Lprocess	../lam7.c	/^Lprocess()$/
Lptime	../lam6.c	/^Lptime(){$/
Lptr	../lamr.c	/^Lptr()$/
Lpurcopy	../lam8.c	/^Lpurcopy()$/
Lpurep	../lam8.c	/^Lpurep()$/
Lputa	../lamr.c	/^Lputa()$/
Lputaux	../lamr.c	/^Lputaux()$/
Lputd	../lam2.c	/^Lputd()$/
Lputdata	../lamr.c	/^Lputdata()$/
Lputdel	../lamr.c	/^Lputdel()$/
Lputdisc	../lamr.c	/^Lputdisc()$/
Lputl	../lamr.c	/^Lputl()$/
Lputlang	../lamr.c	/^Lputlang()$/
Lputloc	../lamr.c	/^Lputloc()$/
Lputparams	../lamr.c	/^Lputparams()$/
Lputprop	../lam2.c	/^Lputprop()$/
Lpvp	../lam8.c	/^Lpvp()$/
Lquo	../lam4.c	/^Lquo()$/
Lrandom	../lam8.c	/^Lrandom()$/
Lratom	../lam2.c	/^Lratom()$/
Lread	../lam2.c	/^Lread()$/
Lreadc	../lam2.c	/^Lreadc()$/
Lreadli	../lam6.c	/^Lreadli()$/
Lrematom	../lam7.c	/^Lrematom()$/
Lremprop	../lam7.c	/^Lremprop()$/
Lreplace	../lamr.c	/^Lreplace()$/
Lreturn	../lam1.c	/^Lreturn()$/
Lrmadd	../ffasl.c	/^Lrmadd(){$/
Lrot	vax.c	/^Lrot()$/
Lrplaca	../lam1.c	/^Lrplaca()$/
Lrplacd	../lam1.c	/^Lrplacd()$/
Lrplacx	../lam8.c	/^Lrplacx()$/
Lrset	../trace.c	/^Lrset ()$/
Lsbiglsh	../divbig.c	/^Lsbiglsh()$/
Lscons	../lam1.c	/^Lscons()$/
Lsegment	../lamr.c	/^Lsegment()$/
Lset	../lam1.c	/^Lset()$/
Lsetarg	../lam6.c	/^Lsetarg()$/
Lsetpli	../lam6.c	/^Lsetpli()$/
Lsetsyn	../lam3.c	/^Lsetsyn()$/
Lshostk	vax.c	/^Lshostk()$/
Lsignal	../lam6.c	/^Lsignal()$/
Lsimpld	../lamr.c	/^Lsimpld()$/
Lsin	../lam8.c	/^lispval Lsin()$/
Lsizeof	../lamr.c	/^Lsizeof()$/
Lslevel	../lamr.c	/^Lslevel()$/
Lsprintf	../lam8.c	/^Lsprintf()$/
Lsqrt	../lam8.c	/^lispval Lsqrt()$/
Lsstrn	../lam8.c	/^Lsstrn()$/
LstarMod	../lam8.c	/^LstarMod()$/
Lstarinvmod	../lam8.c	/^Lstarinvmod()$/
Lstarrpx	../lam8.c	/^Lstarrpx()$/
Lstringp	../lam7.c	/^Lstringp()$/
Lsub	../lam4.c	/^Lsub()$/
Lsub1	../lam3.c	/^Lsub1()$/
Lsubstring	../lam8.c	/^Lsubstring()$/
Lsymbolp	../lam7.c	/^Lsymbolp()$/
Lsyscall	../fex4.c	/^Lsyscall() {$/
Ltci	../lam9.c	/^Ltci()$/
Ltcx	../lam9.c	/^Ltcx()$/
Lterpr	../lam1.c	/^Lterpr()$/
Ltimes	../lam4.c	/^Ltimes()$/
Ltimestr	../lam7.c	/^Ltimestr()$/
Ltruename	../lam1.c	/^Ltruename()$/
Ltyi	../lam6.c	/^Ltyi()$/
Ltyipeek	../lam6.c	/^Ltyipeek()$/
Ltyo	../lam6.c	/^Ltyo()$/
Ltype	../lam1.c	/^Ltype()$/
Luconcat	../lam2.c	/^Luconcat(){$/
Luntyi	../lam6.c	/^Luntyi()$/
Lvaluep	../lamr.c	/^Lvaluep()$/
Lvectorp	../lam8.c	/^Lvectorp()$/
Lvprop	../lam8.c	/^Lvprop()$/
Lvsp	../lam8.c	/^Lvsp()$/
Lwait	../lam7.c	/^Lwait()$/
Lxcar	../lam1.c	/^Lxcar()$/
Lxcdr	../lam1.c	/^Lxcdr()$/
Lzapline	../lam3.c	/^Lzapline()$/
Lzerop	../lam3.c	/^Lzerop()$/
MARKVAL	../alloc.c	/^# define MARKVAL(v)	if(((int)v) >= (int)beginsweep/
MK	../sysat.c	/^#define MK(x,y,z) mfun(x,y,z)$/
Mlisp	../lisp.c	/^main(argc,argv,arge)$/
NOTNIL	../h/global.h	/^#define NOTNIL(a)	(nil!=a)$/
N_BADMAG	../h/aout.h	/^#define	N_BADMAG(x) \\$/
N_STROFF	../h/aout.h	/^#define	N_STROFF(x) \\$/
N_SYMOFF	../h/aout.h	/^#define N_SYMOFF(x) \\$/
N_TXTOFF	../h/aout.h	/^#define	N_TXTOFF(x) \\$/
Nand	../fex1.c	/^Nand()$/
Nbreak	../fex1.c	/^Nbreak()$/
Ncatch	../fex1.c	/^Ncatch()$/
Ncond	../fex1.c	/^Ncond()$/
Ndef	../fex1.c	/^Ndef() {$/
Ndo	../fex2.c	/^Ndo()$/
Ndumplisp	../fex3.c	/^Ndumplisp()$/
Nerrset	../fex1.c	/^lispval Nerrset()$/
Nevwhen	../fex4.c	/^Nevwhen()$/
Nexit	../fex1.c	/^Nexit()$/
Nfunction	../fex2.c	/^Nfunction()$/
Ngc	../alloc.c	/^Ngc()$/
Ngcafter	../fexr.c	/^lispval $/
Ngo	../fex1.c	/^Ngo() $/
Nopval	../fexr.c	/^lispval $/
Nor	../fex1.c	/^Nor()$/
Nprog	../fex1.c	/^Nprog() {$/
Nprog2	../fex2.c	/^Nprog2()$/
Nprogn	../fex2.c	/^Nprogn()$/
Nprogv	../fex2.c	/^Nprogv()$/
Nquote	../fex1.c	/^Nquote()$/
Nreset	../fex1.c	/^Nreset()$/
Nresetio	../fex1.c	/^Nresetio() {$/
Nsetq	../fex1.c	/^Nsetq()$/
Nsstatus	../fex4.c	/^Nsstatus()$/
Nstatus	../fex4.c	/^Nstatus()$/
Nsys	../fex1.c	/^Nsys()$/
Nthrow	../fex1.c	/^Nthrow()$/
Ntpl	../lisp.c	/^Ntpl()$/
P	../h/global.h	/^#define P(p)		((lispval) (xports +((p)-_iob)))$/
PN	../h/global.h	/^#define PN(p)		((int) ((p)-_iob))$/
PUSHDOWN	../h/global.h	/^#define PUSHDOWN(atom,value)\\$/
PUSHVAL	../h/global.h	/^#define PUSHVAL(atom,value)\\$/
Popframe	../h/global.h	/^#define Popframe() (errp->olderrp)$/
Restorestack	../h/global.h	/^#define Restorestack() (lbot = OLDlbot), np = OLDn/
SETTYPE	../h/global.h	/^#define SETTYPE(a1,b,c)   {if((itemp = ATOX(a1)) >/
SMALL	../h/global.h	/^#define SMALL(i)	((lispval)(Fixzero + i))$/
SP	../subbig.c	/^#define SP() ((int *)sp())$/
STASSGN	../fex3.c	/^#define STASSGN(p,q) strncpy(NTABLE[(p)].n_name,(q/
Savestack	../h/global.h	/^#define Savestack(n) struct argent *OLDlbot = lbot/
TYPE	../h/global.h	/^#define	TYPE(a1)	((typetable+1)[ATOX(a1)])$/
TYPL	../h/global.h	/^#define	TYPL(a1)	((typetable+1)[ATOX(a1)])$/
VALID	../h/global.h	/^#define VALID(a)	(a >= CNIL && a < datalim)$/
VecByteSize	../h/global.h	/^#define VecByteSize(x)	(x)$/
VecSize	../h/global.h	/^#define VecSize(x) 	((x) >> 2)$/
VecTotSize	../h/global.h	/^#define VecTotSize(x)  (((x)+3) >> 2)$/
VecTotToByte	../h/global.h	/^#define VecTotToByte(x) ((x) * sizeof(long))$/
VecWordSize	../h/global.h	/^#define VecWordSize(x)	((x) >> 1)$/
Zequal	../lam1.c	/^Zequal()$/
_dofpip	../fpipe.c	/^FILE *_dofpip(iodes)$/
alloc	../alloc.c	/^alloc(tname,npages)$/
argerr	../error.c	/^argerr(msg)$/
atomtoolong	../io.c	/^atomtoolong(copyto)$/
badcall	../alloc.c	/^badcall()$/
badmem	../error.c	/^badmem(n)$/
badmemr	../inits.c	/^badmemr(number)$/
bcopy	../eval2.c	/^bcopy(to,from,size)$/
binderr	../error.c	/^binderr()$/
bndchk	../lam8.c	/^bndchk()$/
calcnum	../io.c	/^calcnum(strbuf,name,base)$/
calhan	../error.c	/^calhan(limit,work,type,uniqid,contuab,message,hand/
callg_	vax.c	/^callg_(funct,arglist)$/
cforget	../sysat.c	/^#define cforget(x) protect(x); Lforget(); unprot()/
cmpx	../lam3.c	/^cmpx(lssp)$/
copval	../fexr.c	/^lispval $/
copyblock	../ffasl.c	/^copyblock(f1,f2,size)$/
csegment	../alloc.c	/^csegment(typecode,nitems,useholeflag)$/
csizeof	../alloc.c	/^int csizeof(tname) lispval tname;$/
cxxr	../lam1.c	/^cxxr(as,ds)$/
delayoff	../inits.c	/^delayoff(){$/
dispget	../ffasl.c	/^lispval $/
divbig	../divbig.c	/^divbig(dividend, divisor, quotient, remainder)$/
dmpport	../io.c	/^dmpport(useport)$/
dopow	../io.c	/^dopow(part2,base)$/
dosig	../inits.c	/^dosig()$/
dumpmydata	../eval2.c	/^dumpmydata(thing)$/
error	../error.c	/^error(mesg,contvl)$/
errorh	../error.c	/^errorh(type,message,valret,contuab,uniqid)$/
errorh1	../error.c	/^errorh1(type,message,valret,contuab,uniqid,arg1)$/
errorh2	../error.c	/^errorh2(type,message,valret,contuab,uniqid,arg1,ar/
exarith	vax.c	/^exarith(a,b,c,phi,plo)$/
export	../divbig.c	/^export(top,bot)$/
finatom	../io.c	/^finatom(name)$/
fpipe	../fpipe.c	/^FILE * fpipe(info)$/
franzexit	../lisp.c	/^franzexit(code)$/
from	../eval.c	/^    function from compiled code, we print out a me/
frstFI	../lam6.c	/^frstFI(p)$/
ftolsp_	../eval2.c	/^ftolsp_(arg1)$/
gc	../alloc.c	/^gc(type_struct)$/
gc1	../alloc.c	/^gc1()$/
gcdump	../lamgc.c	/^gcdump()$/
gcrebear	../alloc.c	/^gcrebear()$/
get_more_space	../alloc.c	/^get_more_space(type_struct,purep)                 /
getatom	../alloc.c	/^getatom()$/
gethspace	../alloc.c	/^gethspace(segsiz,type)$/
getnum	../io.c	/^getnum(name)$/
getvec	../alloc.c	/^getvec(size,typestr,purep)$/
gstab	../ffasl.c	/^gstab()$/
hashfcn	../alloc.c	/^hashfcn(symb)$/
if	vax.c	/^	if(sigintcnt > 0) sigcall(SIGINT);$/
imacrox	../io.c	/^imacrox(current,inlist)$/
inewint	../h/global.h	/^#define inewint(p) Inewint((long)(p))$/
inewstr	../alloc.c	/^char *inewstr(s) char *s;$/
inewval	../alloc.c	/^inewval(arg) lispval arg;$/
initial	../inits.c	/^initial()$/
invmod	../lam8.c	/^invmod (n,modulus)$/
isho	vax.c	/^isho(f)$/
lfltpr	../io.c	/^lfltpr(buf,val)		\/* lisp floating point printer *\//
lispend	../error.c	/^lispend(mesg)$/
locatevar	../eval2.c	/^locatevar(clos,foundc,rnp)$/
lookbit	../alloc.c	/^# define lookbit(p)	(bitmap[(int)p>>5] & bitmsk[((/
macrox	../io.c	/^macrox()$/
major	../h/types.h	/^#define	major(x)	(int)(((unsigned)x>>8)&0377)$/
makedev	../h/types.h	/^#define	makedev(x,y)	(dev_t)(((x)<<8) | (y))$/
makenv	../inits.c	/^makenv()$/
makevals	../sysat.c	/^makevals()$/
markdp	../alloc.c	/^markdp(p) register lispval p;$/
markit	../alloc.c	/^markit(p) lispval *p; { markdp(*p); }$/
mask	../inits.c	/^#define	mask(s)	(1 << ((s)-1))$/
matchtags	../frame.c	/^matchtags(tag1,tag2)$/
matom	../sysat.c	/^matom(string)$/
mfun	../sysat.c	/^lispval mfun(string,start,discip) char *string; li/
minor	../h/types.h	/^#define	minor(x)	(int)(x&0377)$/
mkstFI	../lam6.c	/^mkstFI(base,count,flag)$/
mmuladd	vax.c	/^mmuladd (a, b, c, m) $/
mstr	../sysat.c	/^lispval mstr(string) char *string;$/
myhook	../alloc.c	/^myhook(){}$/
mytemp	../ffasl.c	/^mytemp()$/
namerr	../error.c	/^namerr()$/
newarray	../alloc.c	/^newarray()$/
newatom	../alloc.c	/^newatom(pure) {$/
newdot	../alloc.c	/^newdot()$/
newdoub	../alloc.c	/^newdoub()$/
newfunct	../alloc.c	/^newfunct()$/
newhunk	../alloc.c	/^newhunk(hunknum)$/
newint	../alloc.c	/^newint()$/
newsdot	../alloc.c	/^newsdot()$/
newstr	../alloc.c	/^newstr(purep) {$/
newval	../alloc.c	/^newval()$/
newvec	../alloc.c	/^newvec(size)$/
next	../io.c	/^#define next() (((cc=getc(useport))!=EOF)?(stats =/
next_one	../alloc.c	/^next_one(type_struct)$/
next_pure_one	../alloc.c	/^next_pure_one(type_struct)$/
nveci	../alloc.c	/^nveci(size)$/
oLequal	../lam1.c	/^oLequal()$/
okport	../h/global.h	/^#define okport(arg,default) (vtemp = arg,((TYPE((v/
oktox	../ffasl.c	/^#define oktox(n) \\$/
pagenorm	../fex3.c	/^pagenorm() { vadvise(VA_NORM); }$/
pagerand	../fex3.c	/^pagerand() { vadvise(VA_ANOM); }$/
pageseql	../fex3.c	/^pageseql() { vadvise(VA_SEQL); }$/
pbignum	../pbignum.c	/^pbignum(current, useport)$/
peekc	../h/global.h	/^#define	peekc(p)	(p->_cnt>0? *(p)->_ptr&0377:_filb/
pinewstr	../alloc.c	/^char *pinewstr(s) char *s;$/
pnewdot	../alloc.c	/^pnewdot()$/
pnewdoub	../alloc.c	/^pnewdoub()$/
pnewhunk	../alloc.c	/^pnewhunk(hunknum)$/
pnewint	../alloc.c	/^pnewint()$/
pnewsdot	../alloc.c	/^pnewsdot()$/
pnewval	../alloc.c	/^pnewval()$/
pnewvec	../alloc.c	/^pnewvec(size)$/
pnveci	../alloc.c	/^pnveci(size)$/
printr	../io.c	/^printr(a,useport)$/
protect	../h/global.h	/^#define protect(p) (np++->val = (p))$/
pruneb	../alloc.c	/^pruneb(bignum)$/
r	../lam2.c	/^r(op)$/
ratomr	../io.c	/^ratomr(useport)$/
re_enable	../inits.c	/^re_enable(signo,handler)$/
read	vax.c	/^read(file,buffer,count)$/
readbit	../alloc.c	/^# define readbit(p)	((int)bitmap[r=(int)p>>5] & (s/
readchk	../alloc.c	/^# define readchk(p)	((int)bitfre[(int)p>>5] & bitm/
readr	../io.c	/^readr(useport)$/
readrx	../io.c	/^readrx(code)$/
rlc	../rlc.c	/^rlc()$/
round	../ffasl.c	/^#define round(x,s) ((((x)-1) & ~((s)-1)) + (s))$/
roundup	../alloc.c	/^# define roundup(x,l)	(((x - 1) | (l - 1)) + 1) $/
rpla	../lam1.c	/^rpla(what)$/
rpltab	../lam3.c	/^rpltab(cclass,addr)$/
rtaberr	../error.c	/^rtaberr()$/
s	../fasl.c	/^	   functions to link in and forms to evaluate.$/
saveonly	../h/global.h	/^#define saveonly(n)	asm("#save	n")$/
searchforpdl	../evalf.c	/^struct frame *searchforpdl (myfp)$/
setchk	../alloc.c	/^# define setchk(p)	{bitfre[(int)p>>5] |= bitmsk[((/
show	../lam9.c	/^show(option,line,colum)$/
sigcall	../inits.c	/^sigcall(which)$/
siginth	../inits.c	/^siginth(signo){$/
snpand	../h/global.h	/^#define snpand(n)	asm("#protect	n")$/
space_warn	../alloc.c	/^space_warn(g)$/
subbig	../subbig.c	/^subbig(pos,neg)$/
synclass	../h/chars.h	/^#define synclass(p) (p & 037)$/
toint	../divbig.c	/^#define toint(p) ((int) (p))$/
typenum	../alloc.c	/^int typenum(tname) lispval tname;$/
typred	../fex2.c	/^typred(typ,ptr)$/
ungstab	../ffasl.c	/^ungstab()$/
vectorpr	../io.c	/^vectorpr(vec,port)$/
verify	../ffasl.c	/^verify(in,error)$/
verifypdlp	../evalf.c	/^verifypdlp(curfp)$/
wnaerr	../error.c	/^wnaerr(fcn,wantargs)$/
write	vax.c	/^write(file, buffer, count)$/
xpopnames	../eval2.c	/^xpopnames(llimit)$/
xsbrk	../alloc.c	/^xsbrk(n)$/
ysbrk	../alloc.c	/^char *ysbrk(pages,type) int pages, type;$/
